<?xml version="1.0"?>
<ruleset name="Custom">
    <description>Custom Coding Standards</description>

    <rule ref="Internal.NoCodeFound">
        <severity>0</severity>
    </rule>

    <!--<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter.Found">
        <type>error</type>
    </rule>-->

    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found" />
    <rule ref="Generic.CodeAnalysis.EmptyStatement" />
    <rule ref="Generic.CodeAnalysis.EmptyStatement.DetectedIF">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="Generic.Commenting.Todo" />

    <rule ref="Internal.LineEndings.Mixed">
        <type>error</type>
    </rule>

    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.NoSilencedErrors" />

    <rule ref="PEAR.NamingConventions.ValidClassName" />

    <rule ref="Squiz.Arrays.ArrayBracketSpacing" />
    <rule ref="CustomPHPCS.Arrays.ArrayDeclaration">
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.SingleLineNotAllowed" />
        <!-- Optional -->
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.MultiLineNotAllowed" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.FirstIndexNoNewline" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.FirstValueNoNewline" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.IndexNoNewline" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.ValueNoNewline" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.CloseBraceNewLine" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.KeyNotAligned" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.ValueNotAligned" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.CloseBraceNotAligned" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.SpaceBeforeDoubleArrow" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.SpaceAfterComma" />
        <exclude name="CustomPHPCS.Arrays.ArrayDeclaration.NoCommaAfterLast" />
    </rule>
    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage.ContainsVar">
        <severity>0</severity>
    </rule>
    <rule ref="CustomPHPCS.Strings.EchoedStrings" />

    <rule ref="CustomPHPCS.ControlStructures.AssignmentInCondition" />
    <rule ref="Squiz.ControlStructures.ElseIfDeclaration" />
    <rule ref="Squiz.ControlStructures.InlineIfDeclaration">
        <!-- Optional -->
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeThen" />
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterThen" />
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingBeforeElse" />
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.SpacingAfterElse" />
        <exclude name="Squiz.ControlStructures.InlineIfDeclaration.NotSingleLine" />
    </rule>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration" />

    <!-- Method names MUST NOT be declared with a space after the method name. The opening brace MUST go on its own line, and the closing brace MUST go on the next line following the body. There MUST NOT be a space after the opening parenthesis, and there MUST NOT be a space before the closing parenthesis. -->
    <rule ref="PEAR.Functions.FunctionDeclaration">
        <!-- Optional -->
        <exclude name="PEAR.Functions.FunctionDeclaration.SpaceAfterFunction" />
        <exclude name="PEAR.Functions.FunctionDeclaration.SpaceAfterUse" />
        <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnNewLine" />
        <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnSameLine" />
    </rule>

    <rule ref="Squiz.Operators.IncrementDecrementUsage" />
    <rule ref="Squiz.Operators.ValidLogicalOperators" />

    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing" />
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <!-- Optional -->
        <exclude name="Squiz.WhiteSpace.OperatorSpacing.SpacingBefore" />
    </rule>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
    <!-- PSR-2 ignores trailing whitespace at the end of blank lines but let's keep things tidy -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

    <rule ref="Squiz.Commenting.ClassComment" />
    <rule ref="Squiz.Commenting.FunctionComment">
        <!-- Optional -->
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment" />
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop" />
    </rule>
    <rule ref="Squiz.Commenting.VariableComment" />

    <!-- Reduce errors to warnings for missing comments -->
    <rule ref="Squiz.Commenting.ClassComment.Missing">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.Missing">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamName">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.Commenting.FunctionComment.TypeHintMissing">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.Commenting.VariableComment.Missing">
        <type>warning</type>
    </rule>

    <exclude-pattern>*/.git/*</exclude-pattern>
</ruleset>